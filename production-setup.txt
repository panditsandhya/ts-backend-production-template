End To End Node JS Production Setup


1. Node Projects
2. Git & GitHub
3. Husky - Leverages Git hooks to enforce code quality standards and run tests before commits and pushes, ensuring that only quality code is added to the repository
4. TypeScript - With TypeScript, you define variable types explicitly, catching potential errors at compile time rather than runtime.
5. Folder Structure
6. Commit Lint - Commitlint is a tool used to lint commit messages, ensuring they follow a specific format, often the Conventional Commits specification. It helps maintain consistency and clarity in a project's commit history, which is crucial for generating changelogs and understanding the project's evolution / Commitlint primarily enforces the Conventional Commits specification, which structures commit messages with a type (e.g., feat, fix, chore), optional scope, and a description. 

7. ES Lint - ESLint statically analyzes your code to quickly find problems. It is built into most text editors and you can run ESLint as part of your continuous integration pipeline.
8. Prettier
9. Project Environment
10.Express JS
11.Global Error Handler
12.404 Handler
13.Logger
14.Source Map
15.Colourful Terminal
16.MongoDB
17.Database Log Storage
18.Database Migration
19.Health Endpoint
20.Security - CORS
21.Security - Rate Limiting
22.Dependency Updates
23.Docker
